/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 First check list one and compare to list two then sort them properly using if statements 
 and then check the first one off the second one and so on into a dummy list and then return list
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode temp = new ListNode(-1);
        ListNode curr = temp;
        while(list1!=null && list2!=null){
            if (list1.val < list2.val) {
                curr.next = list1;
                list1 = list1.next;
            } else {
                curr.next = list2;
                list2 = list2.next;
            }
            curr = curr.next;
        }
        if (list1!=null){
            curr.next=list1;
        }
        if (list2!=null){
            curr.next=list2;            
        }
        return temp.next;
    }
}
